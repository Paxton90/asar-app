{
    "welcomeMessage": "Welcome to Asar !",
    "username": "Username",
    "password": "Password",
    "login": "Login",
    "logout": "Logout",
    "project": "Project",
    "create": "Create",
    "delete": "Delete",
    "export": "Export",
    "train": "Train",
    "load": "Load",
    "config": "Config",
    "edit":"Edit",
    "name": "Name",
    "leave": "Leave",
    "story": "Story",
    "stories": "Stories",
    "rule": "Rule",
    "rules": "Rules",
    "intent": "Intent",
    "intents": "Intents",
    "action": "Action",
    "actions": "Actions",
    "response": "Response",
    "responses": "Responses",
    "entity": "Entity",
    "entities": "Entities",
    "slot": "Slot",
    "slots": "Slots",
    "synonym": "Synonym",
    "synonyms": "Synonyms",
    "role": "Role",
    "group": "Group",
    "value": "Value",
    "add": "Add",
    "save": "Save",
    "start": "Start",
    "end": "End",
    "examples": "Examples",
    "default": "Default",
    "mark": "Mark",
    "text": "Text",
    "code": "Code",
    "graph": "Graph",
    "type": "Type",
    "values": "Values",
    "mappings": "Mappings",
    "any": "Any",
    "bool": "Boolean",
    "categorical": "Categorical",
    "float": "Float",
    "list": "List",
    "custom": "Custom",
    "null": "Null",
    "image": "Image",
    "condition": "Condition",
    "conditions": "Conditions",
    "url": "URL",
    "form": "Form",
    "forms": "Forms",
    "active_loop": "Active Loop",
    "requestedSlot": "Requested Slot",
    "requiredSlots": "Required Slot",
    "selectIntents": "Select Intents",
    "fromEntity": "From Entity",
    "fromText": "From Text",
    "fromIntent": "From Intent",
    "fromTriggerIntent":"From Trigger Intent",
    "useIntents": "Use Intents",
    "ignoredIntents": "Ignored Intents",
    "slot_was_set": "Slot was set",
    "createProject": "Create Project",
    "deleteProject": "Delete Project",
    "createFile": "Create File",
    "deleteFile": "Delete File",
    "initialValue": "Initial Value",
    "minValue": "Min Value",
    "maxValue": "Max Value",
    "deleteProjectConfirmation": "Are you sure you want to delete {project} ?",
    "deleteFileConfirmation": "Are you sure you want to delete {file} ?",
    "fileNameCanNotBeEmpty": "File name can not be empty",
    "influenceConversation" : "Influence Conversation",
    "loadAction": "Load Action",
    "useEntities": "Use Entities",
    "ignoreEntities": "Ignore Entities",
    "selectEntities": "Select Entities",
    "selectedText": "Selected text",
    "entityCanNotBeNull": "Entity can not be null",
    "/api":{
        "auth": {
            "login": {
                "success": "You have successfully logged in !",
                "loginFailed": "Login Failed",
                "unexpectedError": "{msg}",
                "validationError": "{msg}"
            },
            "logout": {
                "success": "You have successfully logged out !",
                "unexpectedError": "{msg}"
            }
        },
        "model": {
            "load": {
                "success": "Loading {project}",
                "projectIsTraining": "Cannot load {project} which is training.",
                "stillLoadingPreviousModel": "Still performing previous loading task.",
                "rasaApiConnectionError": "Cannot connect to Rasa API server.",
                "noRasaApiUrlProvided": "Please provide RASA_API_URL.",
                "unexpectedError": "{msg}",
                "validationError": "{msg}"
            },
            "train": {
                "success": "Training {project}",
                "stillLoadingPreviousModel": "Still performing previous loading task.",
                "stillTrainingPreviousModel": "Still performing previous training task",
                "rasaApiConnectionError": "Cannot connect to Rasa API server.",
                "noRasaApiUrlProvided": "Please provide RASA_API_URL.",
                "noAsarApiUrlProvided": "Please provide ASAR_API_URL.",
                "unexpectedError": "{msg}",
                "validationError": "{msg}"
            }
        },
        "project": {
            "create": {
                "success": "{project} created",
                "duplicateNames": "Project name must not be duplicated",
                "invalidName": "{project} is invalid",
                "unexpectedError": "{msg}",
                "validationError": "{msg}"
            },
            "delete": {
                "success": "{project} deleted",
                "invalidName": "{project} is invalid",
                "targetDoesNotExist": "{project} does not exist",
                "unexpectedError": "{msg}",
                "validationError": "{msg}"
            }
        },
        "#comment" : "file including story, rule, intent, action, response, entity, slot, synonyms, lconfigs.",
        "file": { 
            "create": {
                "success": "{file} created",
                "duplicateNames": "File name must not be duplicated",
                "invalidName": "{file} is invalid",
                "unexpectedError": "{msg}",
                "validationError": "{msg}"
            },
            "delete": {
                "success": "{file} deleted",
                "invalidName": "{file} is invalid",
                "targetDoesNotExist": "{file} does not exist",
                "unexpectedError": "{msg}",
                "validationError": "{msg}"
            },
            "update": {
                "success":"{file} updated",
                "invalidName": "{file} is invalid",
                "targetDoesNotExist": "{file} does not exist",
                "unexpectedError": "{msg}",
                "validationError": "{msg}"
            }
        }
    }
}